YT Video Ref:  https://www.youtube.com/watch?v=SF1k_Twr9cg

Stage-1:
- Build the authentication system
- Create superuser

Stage-2:
- Create room app
- Create "room" model
    - Create auto slugify functionality in the django admin panel
- Show all the available rooms
    - Make search functionality for all the available rooms
    - Make filter functionality of the chat-rooms
- Create room-detail view (Chats will be established here)
- Create a chat-consumer
    - Define that consumer into the 'routing.py' file
    - Define the ProtocolTypeRouter inside the "chatSystem/asgi.py" file.
        This allows us to use different protocols for our requests.
- Joining to a chat
    - Enable redis on docker. cmds below
        docker ps -a
        docker exec -it docker-redis bash
    - Connect frontend websocket to backend consumer

Stage-3:
- Sending messages
    - Get the username into the websocket-enabled script.
    - Parse the data into js-object which is sent from the backend.
    - Check if the data is not empty.
    - Append the entire CHAT-BLOCK into the HTML & interpolate the required data using js.
- Storing messages
    - Create a new model to store the messages.
    - Populate some sample msg & display them into frontend msg.
    - Store the messages into db from chatConsumer using "sync_to_async"
- Scrolling to the bottom
